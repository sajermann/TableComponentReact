import { SVGProps } from "react";

const ICONS = {
  pdf: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      {...rest}
      width={width || "100%"}
      height={height || "100%"}
      stroke={color || "currentColor"}
      viewBox="0 0 64 64"
    >
      <path
        fill={color || "currentColor"}
        d="M 17.65625 4 C 16.320313 4 15.066406 4.519531 14.121094 5.464844 L 5.464844 14.121094 C 4.519531 15.066406 4 16.320313 4 17.65625 L 4 57 C 4 58.652344 5.347656 60 7 60 L 47 60 C 48.652344 60 50 58.652344 50 57 L 50 46 L 58 46 C 59.101563 46 60 45.101563 60 44 L 60 24 C 60 22.898438 59.101563 22 58 22 L 50 22 L 50 7 C 50 5.347656 48.652344 4 47 4 Z M 18 6 L 47 6 C 47.550781 6 48 6.449219 48 7 L 48 22 L 16 22 C 14.898438 22 14 22.898438 14 24 L 14 44 C 14 45.101563 14.898438 46 16 46 L 48 46 L 48 57 C 48 57.550781 47.550781 58 47 58 L 7 58 C 6.449219 58 6 57.550781 6 57 L 6 18 L 15 18 C 16.652344 18 18 16.652344 18 15 Z M 16 6.5 L 16 15 C 16 15.550781 15.550781 16 15 16 L 6.5 16 C 6.609375 15.835938 6.734375 15.679688 6.878906 15.535156 L 15.535156 6.878906 C 15.679688 6.734375 15.835938 6.609375 16 6.5 Z M 16 24 L 58 24 L 58 44 L 16 44 Z M 25 28 C 24.445313 28 24 28.449219 24 29 L 24 39 C 24 39.550781 24.445313 40 25 40 C 25.554688 40 26 39.550781 26 39 L 26 36 L 29 36 C 30.652344 36 32 34.652344 32 33 L 32 31 C 32 29.347656 30.652344 28 29 28 Z M 35 28 C 34.445313 28 34 28.449219 34 29 L 34 39 C 34 39.550781 34.445313 40 35 40 L 38 40 C 40.207031 40 42 38.207031 42 36 L 42 32 C 42 29.792969 40.207031 28 38 28 Z M 45 28 C 44.445313 28 44 28.449219 44 29 L 44 39 C 44 39.550781 44.445313 40 45 40 C 45.554688 40 46 39.550781 46 39 L 46 36 L 49 36 C 49.554688 36 50 35.550781 50 35 C 50 34.449219 49.554688 34 49 34 L 46 34 L 46 30 L 50 30 C 50.554688 30 51 29.550781 51 29 C 51 28.449219 50.554688 28 50 28 Z M 26 30 L 29 30 C 29.550781 30 30 30.449219 30 31 L 30 33 C 30 33.550781 29.550781 34 29 34 L 26 34 Z M 36 30 L 38 30 C 39.101563 30 40 30.898438 40 32 L 40 36 C 40 37.101563 39.101563 38 38 38 L 36 38 Z M 9 52 C 8.445313 52 8 52.449219 8 53 L 8 55 C 8 55.550781 8.445313 56 9 56 C 9.554688 56 10 55.550781 10 55 L 10 53 C 10 52.449219 9.554688 52 9 52 Z M 14 52 C 13.445313 52 13 52.449219 13 53 L 13 55 C 13 55.550781 13.445313 56 14 56 C 14.554688 56 15 55.550781 15 55 L 15 53 C 15 52.449219 14.554688 52 14 52 Z M 19 52 C 18.445313 52 18 52.449219 18 53 L 18 55 C 18 55.550781 18.445313 56 19 56 C 19.554688 56 20 55.550781 20 55 L 20 53 C 20 52.449219 19.554688 52 19 52 Z M 24 52 C 23.445313 52 23 52.449219 23 53 L 23 55 C 23 55.550781 23.445313 56 24 56 C 24.554688 56 25 55.550781 25 55 L 25 53 C 25 52.449219 24.554688 52 24 52 Z M 29 52 C 28.445313 52 28 52.449219 28 53 L 28 55 C 28 55.550781 28.445313 56 29 56 C 29.554688 56 30 55.550781 30 55 L 30 53 C 30 52.449219 29.554688 52 29 52 Z M 34 52 C 33.445313 52 33 52.449219 33 53 L 33 55 C 33 55.550781 33.445313 56 34 56 C 34.554688 56 35 55.550781 35 55 L 35 53 C 35 52.449219 34.554688 52 34 52 Z M 39 52 C 38.445313 52 38 52.449219 38 53 L 38 55 C 38 55.550781 38.445313 56 39 56 C 39.554688 56 40 55.550781 40 55 L 40 53 C 40 52.449219 39.554688 52 39 52 Z M 44 52 C 43.445313 52 43 52.449219 43 53 L 43 55 C 43 55.550781 43.445313 56 44 56 C 44.554688 56 45 55.550781 45 55 L 45 53 C 45 52.449219 44.554688 52 44 52 Z"
      />
    </svg>
  ),
  excel: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      {...rest}
      width={width || "100%"}
      height={height || "100%"}
      viewBox="0 0 19 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M2.84042 7.54545V1H15.0526L18 3.86364V19H2M13.7895 1V5.09091H18M6.42105 10L4.73684 12.6591L3.05263 10H2.84211L4.73684 12.8636L2.63158 15.7273H2.84211L4.73684 13.0682L6.63158 15.7273H6.84211L4.73684 12.8636L6.63158 10H6.42105Z"
        stroke={color || "currentColor"}
        strokeWidth="2"
      />
    </svg>
  ),
  xls: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      {...rest}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 64 64"
      width={width || "100%"}
      height={height || "100%"}
      stroke={color || "currentColor"}
    >
      <path
        fill={color || "currentColor"}
        d="M 17.660156 4 C 16.320313 4 15.058594 4.519531 14.121094 5.460938 L 5.460938 14.121094 C 4.519531 15.070313 4 16.320313 4 17.660156 L 4 57 C 4 58.648438 5.351563 60 7 60 L 47 60 C 48.648438 60 50 58.648438 50 57 L 50 46 L 58 46 C 59.101563 46 60 45.101563 60 44 L 60 24 C 60 22.898438 59.101563 22 58 22 L 50 22 L 50 7 C 50 5.351563 48.648438 4 47 4 Z M 18 6 L 47 6 C 47.550781 6 48 6.449219 48 7 L 48 22 L 16 22 C 14.898438 22 14 22.898438 14 24 L 14 44 C 14 45.101563 14.898438 46 16 46 L 48 46 L 48 57 C 48 57.550781 47.550781 58 47 58 L 7 58 C 6.449219 58 6 57.550781 6 57 L 6 18 L 15 18 C 16.652344 18 18 16.652344 18 15 Z M 16 6.5 L 16 15 C 16 15.550781 15.550781 16 15 16 L 6.5 16 C 6.613281 15.835938 6.738281 15.679688 6.882813 15.539063 L 15.539063 6.882813 C 15.679688 6.738281 15.835938 6.609375 16 6.5 Z M 16 24 L 58 24 L 58 44 L 16 44 Z M 36 28 C 35.449219 28 35 28.445313 35 29 L 35 39 C 35 39.554688 35.449219 40 36 40 L 41 40 C 41.550781 40 42 39.554688 42 39 C 42 38.445313 41.550781 38 41 38 L 37 38 L 37 29 C 37 28.445313 36.550781 28 36 28 Z M 46 28 C 44.347656 28 43 29.347656 43 31 L 43 32 C 43 33.652344 44.347656 35 46 35 L 48 35 C 48.550781 35 49 35.449219 49 36 L 49 37 C 49 37.550781 48.550781 38 48 38 L 46 38 C 45.449219 38 45 37.550781 45 37 C 45 36.445313 44.550781 36 44 36 C 43.449219 36 43 36.445313 43 37 C 43 38.652344 44.347656 40 46 40 L 48 40 C 49.652344 40 51 38.652344 51 37 L 51 36 C 51 34.347656 49.652344 33 48 33 L 46 33 C 45.449219 33 45 32.550781 45 32 L 45 31 C 45 30.449219 45.449219 30 46 30 L 48 30 C 48.550781 30 49 30.449219 49 31 C 49 31.554688 49.449219 32 50 32 C 50.550781 32 51 31.554688 51 31 C 51 29.347656 49.652344 28 48 28 Z M 24.859375 28.011719 C 24.730469 28.027344 24.601563 28.070313 24.484375 28.140625 C 24.011719 28.425781 23.859375 29.039063 24.140625 29.515625 L 26.832031 34 L 24.140625 38.484375 C 23.859375 38.957031 24.011719 39.574219 24.484375 39.859375 C 24.644531 39.953125 24.824219 40 25 40 C 25.339844 40 25.671875 39.828125 25.859375 39.515625 L 28 35.941406 L 30.140625 39.515625 C 30.328125 39.828125 30.660156 40 31 40 C 31.175781 40 31.355469 39.953125 31.515625 39.859375 C 31.988281 39.574219 32.140625 38.957031 31.859375 38.484375 L 29.167969 34 L 31.859375 29.515625 C 32.140625 29.042969 31.988281 28.425781 31.515625 28.140625 C 31.042969 27.859375 30.425781 28.011719 30.140625 28.484375 L 28 32.058594 L 25.859375 28.484375 C 25.644531 28.128906 25.246094 27.957031 24.859375 28.011719 Z M 9 52 C 8.449219 52 8 52.445313 8 53 L 8 55 C 8 55.554688 8.449219 56 9 56 C 9.550781 56 10 55.554688 10 55 L 10 53 C 10 52.445313 9.550781 52 9 52 Z M 14 52 C 13.449219 52 13 52.445313 13 53 L 13 55 C 13 55.554688 13.449219 56 14 56 C 14.550781 56 15 55.554688 15 55 L 15 53 C 15 52.445313 14.550781 52 14 52 Z M 19 52 C 18.449219 52 18 52.445313 18 53 L 18 55 C 18 55.554688 18.449219 56 19 56 C 19.550781 56 20 55.554688 20 55 L 20 53 C 20 52.445313 19.550781 52 19 52 Z M 24 52 C 23.449219 52 23 52.445313 23 53 L 23 55 C 23 55.554688 23.449219 56 24 56 C 24.550781 56 25 55.554688 25 55 L 25 53 C 25 52.445313 24.550781 52 24 52 Z M 29 52 C 28.449219 52 28 52.445313 28 53 L 28 55 C 28 55.554688 28.449219 56 29 56 C 29.550781 56 30 55.554688 30 55 L 30 53 C 30 52.445313 29.550781 52 29 52 Z M 34 52 C 33.449219 52 33 52.445313 33 53 L 33 55 C 33 55.554688 33.449219 56 34 56 C 34.550781 56 35 55.554688 35 55 L 35 53 C 35 52.445313 34.550781 52 34 52 Z M 39 52 C 38.449219 52 38 52.445313 38 53 L 38 55 C 38 55.554688 38.449219 56 39 56 C 39.550781 56 40 55.554688 40 55 L 40 53 C 40 52.445313 39.550781 52 39 52 Z M 44 52 C 43.449219 52 43 52.445313 43 53 L 43 55 C 43 55.554688 43.449219 56 44 56 C 44.550781 56 45 55.554688 45 55 L 45 53 C 45 52.445313 44.550781 52 44 52 Z"
      />
    </svg>
  ),
  png: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      {...rest}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 64 64"
      width={width || "100%"}
      height={height || "100%"}
      stroke={color || "currentColor"}
    >
      <path
        fill={color || "currentColor"}
        d="M 17.660156 4 C 16.333156 3.998 15.059141 4.5239375 14.119141 5.4609375 L 5.4609375 14.119141 C 4.5239375 15.059141 3.998 16.333156 4 17.660156 L 4 57 C 4 58.657 5.343 60 7 60 L 47 60 C 48.657 60 50 58.657 50 57 L 50 46 L 58 46 C 59.105 46 60 45.105 60 44 L 60 24 C 60 22.895 59.105 22 58 22 L 50 22 L 50 7 C 50 5.343 48.657 4 47 4 L 17.660156 4 z M 18 6 L 47 6 C 47.552 6 48 6.448 48 7 L 48 22 L 16 22 C 14.895 22 14 22.895 14 24 L 14 44 C 14 45.105 14.895 46 16 46 L 48 46 L 48 57 C 48 57.552 47.552 58 47 58 L 7 58 C 6.448 58 6 57.552 6 57 L 6 18 L 15 18 C 16.657 18 18 16.657 18 15 L 18 6 z M 16 6.5 L 16 15 C 16 15.552 15.552 16 15 16 L 6.5 16 C 6.611 15.834 6.7388594 15.679063 6.8808594 15.539062 L 15.539062 6.8808594 C 15.679063 6.7388594 15.834 6.611 16 6.5 z M 16 24 L 58 24 L 58 44 L 16 44 L 16 24 z M 24 28 C 23.448 28 23 28.448 23 29 L 23 39 C 23 39.552 23.448 40 24 40 C 24.552 40 25 39.552 25 39 L 25 36 L 28 36 C 29.657 36 31 34.657 31 33 L 31 31 C 31 29.343 29.657 28 28 28 L 24 28 z M 40 28 C 39.447 28 39 28.448 39 29 L 39 35.390625 L 34.857422 28.486328 C 34.627422 28.100328 34.162422 27.918109 33.732422 28.037109 C 33.299422 28.156109 33 28.55 33 29 L 33 39 C 33 39.552 33.447 40 34 40 C 34.553 40 35 39.552 35 39 L 35 32.609375 L 39.142578 39.513672 C 39.325578 39.820672 39.655 40 40 40 C 40.089 40 40.179578 39.988844 40.267578 39.964844 C 40.700578 39.844844 41 39.45 41 39 L 41 29 C 41 28.448 40.553 28 40 28 z M 46 28 C 44.346 28 43 29.346 43 31 L 43 37 C 43 38.654 44.346 40 46 40 L 48 40 C 49.654 40 51 38.654 51 37 L 51 35 C 51 34.447 50.553 34 50 34 L 48 34 C 47.447 34 47 34.447 47 35 C 47 35.553 47.447 36 48 36 L 49 36 L 49 37 C 49 37.552 48.552 38 48 38 L 46 38 C 45.448 38 45 37.552 45 37 L 45 31 C 45 30.448 45.448 30 46 30 L 48 30 C 48.552 30 49 30.448 49 31 C 49 31.553 49.447 32 50 32 C 50.553 32 51 31.553 51 31 C 51 29.346 49.654 28 48 28 L 46 28 z M 25 30 L 28 30 C 28.552 30 29 30.448 29 31 L 29 33 C 29 33.552 28.552 34 28 34 L 25 34 L 25 30 z M 9 52 C 8.448 52 8 52.448 8 53 L 8 55 C 8 55.552 8.448 56 9 56 C 9.552 56 10 55.552 10 55 L 10 53 C 10 52.448 9.552 52 9 52 z M 14 52 C 13.448 52 13 52.448 13 53 L 13 55 C 13 55.552 13.448 56 14 56 C 14.552 56 15 55.552 15 55 L 15 53 C 15 52.448 14.552 52 14 52 z M 19 52 C 18.448 52 18 52.448 18 53 L 18 55 C 18 55.552 18.448 56 19 56 C 19.552 56 20 55.552 20 55 L 20 53 C 20 52.448 19.552 52 19 52 z M 24 52 C 23.448 52 23 52.448 23 53 L 23 55 C 23 55.552 23.448 56 24 56 C 24.552 56 25 55.552 25 55 L 25 53 C 25 52.448 24.552 52 24 52 z M 29 52 C 28.448 52 28 52.448 28 53 L 28 55 C 28 55.552 28.448 56 29 56 C 29.552 56 30 55.552 30 55 L 30 53 C 30 52.448 29.552 52 29 52 z M 34 52 C 33.448 52 33 52.448 33 53 L 33 55 C 33 55.552 33.448 56 34 56 C 34.552 56 35 55.552 35 55 L 35 53 C 35 52.448 34.552 52 34 52 z M 39 52 C 38.448 52 38 52.448 38 53 L 38 55 C 38 55.552 38.448 56 39 56 C 39.552 56 40 55.552 40 55 L 40 53 C 40 52.448 39.552 52 39 52 z M 44 52 C 43.448 52 43 52.448 43 53 L 43 55 C 43 55.552 43.448 56 44 56 C 44.552 56 45 55.552 45 55 L 45 53 C 45 52.448 44.552 52 44 52 z"
      />
    </svg>
  ),
  xml: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      {...rest}
      viewBox="0 0 64 64"
      width={width || "100%"}
      height={height || "100%"}
      stroke={color || "currentColor"}
    >
      <path
        fill={color || "currentColor"}
        d="M 17.65625 4 C 16.32025 4 15.065094 4.5208437 14.121094 5.4648438 L 5.4648438 14.121094 C 4.5208438 15.066094 4 16.32125 4 17.65625 L 4 57 C 4 58.654 5.346 60 7 60 L 47 60 C 48.654 60 50 58.654 50 57 L 50 46 L 58 46 C 59.103 46 60 45.103 60 44 L 60 24 C 60 22.897 59.103 22 58 22 L 50 22 L 50 7 C 50 5.346 48.654 4 47 4 L 17.65625 4 z M 18 6 L 47 6 C 47.552 6 48 6.449 48 7 L 48 22 L 16 22 C 14.897 22 14 22.897 14 24 L 14 44 C 14 45.103 14.897 46 16 46 L 48 46 L 48 57 C 48 57.551 47.552 58 47 58 L 7 58 C 6.448 58 6 57.551 6 57 L 6 18 L 15 18 C 16.654 18 18 16.654 18 15 L 18 6 z M 16 6.4980469 L 16 15 C 16 15.551 15.552 16 15 16 L 6.4980469 16 C 6.6080469 15.835 6.7349062 15.679156 6.8789062 15.535156 L 15.535156 6.8789062 C 15.679156 6.7349062 15.834 6.6080469 16 6.4980469 z M 16 24 L 58 24 L 58 44 L 16 44 L 16 24 z M 45 28 C 44.448 28 44 28.448 44 29 L 44 39 C 44 39.552 44.448 40 45 40 L 50 40 C 50.552 40 51 39.552 51 39 C 51 38.448 50.552 38 50 38 L 46 38 L 46 29 C 46 28.448 45.552 28 45 28 z M 35.107422 28.005859 C 34.997219 27.993891 34.883484 28.001094 34.771484 28.027344 C 34.319484 28.133344 34 28.536 34 29 L 34 39 C 34 39.552 34.447 40 35 40 C 35.553 40 36 39.552 36 39 L 36 33.236328 L 37.105469 35.447266 C 37.445469 36.125266 38.554531 36.125266 38.894531 35.447266 L 40 33.236328 L 40 39 C 40 39.552 40.447 40 41 40 C 41.553 40 42 39.552 42 39 L 42 29 C 42 28.536 41.680516 28.133344 41.228516 28.027344 C 40.780516 27.921344 40.312469 28.137734 40.105469 28.552734 L 38 32.763672 L 35.894531 28.552734 C 35.739281 28.241484 35.438031 28.041766 35.107422 28.005859 z M 31.136719 28.007812 C 30.751828 27.95325 30.354375 28.127219 30.140625 28.480469 L 28 32.060547 L 25.859375 28.490234 C 25.517375 28.056234 24.888078 27.981266 24.455078 28.322266 C 24.104078 28.599266 23.980391 29.076234 24.150391 29.490234 L 26.830078 34 L 24.140625 38.490234 C 23.930625 39.001234 24.173594 39.585875 24.683594 39.796875 C 25.096594 39.966875 25.572609 39.842234 25.849609 39.490234 L 28 35.939453 L 30.140625 39.509766 C 30.350625 40.020766 30.934313 40.263734 31.445312 40.052734 C 31.956312 39.842734 32.199281 39.257094 31.988281 38.746094 C 31.953281 38.661094 31.906609 38.582766 31.849609 38.509766 L 29.169922 34 L 31.859375 29.509766 C 32.141375 29.034766 31.984766 28.422625 31.509766 28.140625 C 31.391766 28.069875 31.265016 28.026 31.136719 28.007812 z M 9 52 C 8.447 52 8 52.448 8 53 L 8 55 C 8 55.552 8.447 56 9 56 C 9.553 56 10 55.552 10 55 L 10 53 C 10 52.448 9.553 52 9 52 z M 14 52 C 13.447 52 13 52.448 13 53 L 13 55 C 13 55.552 13.447 56 14 56 C 14.553 56 15 55.552 15 55 L 15 53 C 15 52.448 14.553 52 14 52 z M 19 52 C 18.447 52 18 52.448 18 53 L 18 55 C 18 55.552 18.447 56 19 56 C 19.553 56 20 55.552 20 55 L 20 53 C 20 52.448 19.553 52 19 52 z M 24 52 C 23.447 52 23 52.448 23 53 L 23 55 C 23 55.552 23.447 56 24 56 C 24.553 56 25 55.552 25 55 L 25 53 C 25 52.448 24.553 52 24 52 z M 29 52 C 28.447 52 28 52.448 28 53 L 28 55 C 28 55.552 28.447 56 29 56 C 29.553 56 30 55.552 30 55 L 30 53 C 30 52.448 29.553 52 29 52 z M 34 52 C 33.447 52 33 52.448 33 53 L 33 55 C 33 55.552 33.447 56 34 56 C 34.553 56 35 55.552 35 55 L 35 53 C 35 52.448 34.553 52 34 52 z M 39 52 C 38.447 52 38 52.448 38 53 L 38 55 C 38 55.552 38.447 56 39 56 C 39.553 56 40 55.552 40 55 L 40 53 C 40 52.448 39.553 52 39 52 z M 44 52 C 43.447 52 43 52.448 43 53 L 43 55 C 43 55.552 43.447 56 44 56 C 44.553 56 45 55.552 45 55 L 45 53 C 45 52.448 44.553 52 44 52 z"
      />
    </svg>
  ),
  csv: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      {...rest}
      width={width || "100%"}
      height={height || "100%"}
      stroke={color || "currentColor"}
      viewBox="0 0 64 64"
    >
      <path
        fill={color || "currentColor"}
        d="M 17.660156 4 C 16.320313 4 15.058594 4.519531 14.121094 5.460938 L 5.460938 14.121094 C 4.519531 15.070313 4 16.320313 4 17.660156 L 4 57 C 4 58.648438 5.351563 60 7 60 L 47 60 C 48.648438 60 50 58.648438 50 57 L 50 46 L 58 46 C 59.101563 46 60 45.101563 60 44 L 60 24 C 60 22.898438 59.101563 22 58 22 L 50 22 L 50 7 C 50 5.351563 48.648438 4 47 4 Z M 18 6 L 47 6 C 47.550781 6 48 6.449219 48 7 L 48 22 L 16 22 C 14.898438 22 14 22.898438 14 24 L 14 44 C 14 45.101563 14.898438 46 16 46 L 48 46 L 48 57 C 48 57.550781 47.550781 58 47 58 L 7 58 C 6.449219 58 6 57.550781 6 57 L 6 18 L 15 18 C 16.652344 18 18 16.652344 18 15 Z M 16 6.5 L 16 15 C 16 15.550781 15.550781 16 15 16 L 6.5 16 C 6.613281 15.835938 6.738281 15.679688 6.882813 15.539063 L 15.539063 6.882813 C 15.679688 6.738281 15.835938 6.609375 16 6.5 Z M 16 24 L 58 24 L 58 44 L 16 44 Z M 27 28 C 25.347656 28 24 29.347656 24 31 L 24 37 C 24 38.652344 25.347656 40 27 40 L 29 40 C 30.652344 40 32 38.652344 32 37 C 32 36.445313 31.554688 36 31 36 C 30.445313 36 30 36.445313 30 37 C 30 37.550781 29.550781 38 29 38 L 27 38 C 26.449219 38 26 37.550781 26 37 L 26 31 C 26 30.449219 26.449219 30 27 30 L 29 30 C 29.550781 30 30 30.449219 30 31 C 30 31.554688 30.445313 32 31 32 C 31.554688 32 32 31.554688 32 31 C 32 29.347656 30.652344 28 29 28 Z M 37 28 C 35.347656 28 34 29.347656 34 31 L 34 32 C 34 33.652344 35.347656 35 37 35 L 39 35 C 39.550781 35 40 35.449219 40 36 L 40 37 C 40 37.550781 39.550781 38 39 38 L 37 38 C 36.449219 38 36 37.550781 36 37 C 36 36.445313 35.554688 36 35 36 C 34.445313 36 34 36.445313 34 37 C 34 38.652344 35.347656 40 37 40 L 39 40 C 40.652344 40 42 38.652344 42 37 L 42 36 C 42 34.347656 40.652344 33 39 33 L 37 33 C 36.449219 33 36 32.550781 36 32 L 36 31 C 36 30.449219 36.449219 30 37 30 L 39 30 C 39.550781 30 40 30.449219 40 31 C 40 31.554688 40.445313 32 41 32 C 41.554688 32 42 31.554688 42 31 C 42 29.347656 40.652344 28 39 28 Z M 45.109375 28.003906 C 44.980469 27.992188 44.84375 28.003906 44.714844 28.042969 C 44.183594 28.203125 43.886719 28.757813 44.042969 29.285156 L 47.042969 39.285156 C 47.171875 39.710938 47.558594 40 48 40 C 48.441406 40 48.828125 39.710938 48.957031 39.285156 L 51.957031 29.285156 C 52.113281 28.757813 51.816406 28.203125 51.285156 28.042969 C 50.753906 27.886719 50.199219 28.183594 50.042969 28.714844 L 48 35.519531 L 45.957031 28.714844 C 45.835938 28.316406 45.496094 28.046875 45.109375 28.003906 Z M 9 52 C 8.445313 52 8 52.445313 8 53 L 8 55 C 8 55.554688 8.445313 56 9 56 C 9.554688 56 10 55.554688 10 55 L 10 53 C 10 52.445313 9.554688 52 9 52 Z M 14 52 C 13.445313 52 13 52.445313 13 53 L 13 55 C 13 55.554688 13.445313 56 14 56 C 14.554688 56 15 55.554688 15 55 L 15 53 C 15 52.445313 14.554688 52 14 52 Z M 19 52 C 18.445313 52 18 52.445313 18 53 L 18 55 C 18 55.554688 18.445313 56 19 56 C 19.554688 56 20 55.554688 20 55 L 20 53 C 20 52.445313 19.554688 52 19 52 Z M 24 52 C 23.445313 52 23 52.445313 23 53 L 23 55 C 23 55.554688 23.445313 56 24 56 C 24.554688 56 25 55.554688 25 55 L 25 53 C 25 52.445313 24.554688 52 24 52 Z M 29 52 C 28.445313 52 28 52.445313 28 53 L 28 55 C 28 55.554688 28.445313 56 29 56 C 29.554688 56 30 55.554688 30 55 L 30 53 C 30 52.445313 29.554688 52 29 52 Z M 34 52 C 33.445313 52 33 52.445313 33 53 L 33 55 C 33 55.554688 33.445313 56 34 56 C 34.554688 56 35 55.554688 35 55 L 35 53 C 35 52.445313 34.554688 52 34 52 Z M 39 52 C 38.445313 52 38 52.445313 38 53 L 38 55 C 38 55.554688 38.445313 56 39 56 C 39.554688 56 40 55.554688 40 55 L 40 53 C 40 52.445313 39.554688 52 39 52 Z M 44 52 C 43.445313 52 43 52.445313 43 53 L 43 55 C 43 55.554688 43.445313 56 44 56 C 44.554688 56 45 55.554688 45 55 L 45 53 C 45 52.445313 44.554688 52 44 52 Z"
      />
    </svg>
  ),
  indeterminate: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      width={width || "100%"}
      height={height || "50%"}
      xmlns="http://www.w3.org/2000/svg"
      {...rest}
    >
      <g id="Layer_1">
        <title>Layer 1</title>
        <rect
          stroke="#000"
          rx="3"
          id="svg_1"
          width={width || "100%"}
          height={height || "100%"}
          y="-0.07418"
          x="-0.01483"
          strokeWidth="0"
          fill={color || "currentColor"}
        />
      </g>
    </svg>
  ),
  loadingPoints: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      viewBox="-20 -25 100 100"
      {...rest}
      width={width || "100%"}
      height={height || "100%"}
      fill={color || "currentColor"}
    >
      <circle fill="currentColor" stroke="none" cx="6" cy="25" r="6">
        <animateTransform
          attributeName="transform"
          dur="1s"
          type="translate"
          values="0 15 ; 0 -15; 0 15"
          repeatCount="indefinite"
          begin="0.1"
        />
        <animate
          attributeName="opacity"
          dur="1s"
          values="0;1;0"
          repeatCount="indefinite"
          begin="0.1"
        />
      </circle>
      <circle fill="currentColor" stroke="none" cx="30" cy="25" r="6">
        <animateTransform
          attributeName="transform"
          dur="1s"
          type="translate"
          values="0 10 ; 0 -10; 0 10"
          repeatCount="indefinite"
          begin="0.2"
        />
        <animate
          attributeName="opacity"
          dur="1s"
          values="0;1;0"
          repeatCount="indefinite"
          begin="0.2"
        />
      </circle>
      <circle fill="currentColor" stroke="none" cx="54" cy="25" r="6">
        <animateTransform
          attributeName="transform"
          dur="1s"
          type="translate"
          values="0 5 ; 0 -5; 0 5"
          repeatCount="indefinite"
          begin="0.3"
        />
        <animate
          attributeName="opacity"
          dur="1s"
          values="0;1;0"
          repeatCount="indefinite"
          begin="0.3"
        />
      </circle>
    </svg>
  ),
  loadingCircle: ({ width, height, color, ...rest }: IconProps) => (
    <svg
      version="1.1"
      {...rest}
      width={width || "100%"}
      height={height || "100%"}
      fill={color || "currentColor"}
      xmlns="http://www.w3.org/2000/svg"
      x="0px"
      y="0px"
      viewBox="0 0 32 32"
      xmlSpace="preserve"
    >
      <animateTransform
        attributeType="xml"
        attributeName="transform"
        type="rotate"
        from="360 0 0"
        to="0 0 0"
        dur="1s"
        additive="sum"
        repeatCount="indefinite"
      />
      <path
        fill={color || "currentColor"}
        d="M18,4.181v2.021c4.559,0.929,8,4.97,8,9.798c0,5.514-4.486,10-10,10S6,21.514,6,16c0-4.829,3.441-8.869,8-9.798V4.181
				C8.334,5.137,4,10.066,4,16c0,6.617,5.383,12,12,12s12-5.383,12-12C28,10.066,23.666,5.137,18,4.181z"
      />
    </svg>
  ),
};

export const keysIcons = Object.keys(ICONS);

export type AllowNames = keyof typeof ICONS;

type IconProps = SVGProps<SVGSVGElement> & {
  nameIcon?: AllowNames;
  fullFill?: boolean;
};

export function Icons({ nameIcon, ...rest }: IconProps) {
  if (!nameIcon) return null;
  const iconName = (nameIcon.charAt(0).toLowerCase() +
    nameIcon.slice(1)) as AllowNames;
  return ICONS[iconName]({ ...rest }) || null;
}
